<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="es" xml:lang="es">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>SAUAP - Sistema de Altas</title>
    <style type="text/css">
        body {
            font-family: Arial, sans-serif;
            background-color: #ffffff;
            margin: 0;
            padding: 0;
            text-align: center;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        .header {
            background-color: #f09a3c;
            color: #000000;
            padding: 15px;
            font-weight: bold;
            font-size: 28px;
            width: 100%;
        }

        .main-container {
            flex: 1;
            display: flex;
            flex-direction: column;
            width: 100%;
        }

        .container {
            background-color: #fde8cf;
            margin: 20px auto;
            width: 90%;
            max-width: 1200px;
            padding: 30px;
            border-radius: 12px;
            text-align: center;
            flex: 1;
            position: relative;
            overflow: hidden;
            transition: background-color 0.6s ease;
        }

        .menu-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            grid-template-rows: 1fr 1fr;
            gap: 25px;
            height: 500px;
            width: 100%;
        }

        .menu-button {
            position: relative;
            overflow: hidden;
            background-color: #F5BF77;
            border: none;
            border-radius: 15px;
            padding: 20px;
            font-size: 20px;
            font-weight: bold;
            cursor: pointer;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            transition: transform 0.3s, background-color 0.3s;
            text-align: center;
            z-index: 2;
        }

        .menu-button:hover {
            background-color: #e89227;
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .button-large {
            grid-column: 1;
            grid-row: span 2;
            height: 100%;
        }

        .button-half {
            grid-column: 2;
            grid-row: 1;
            height: 100%;
        }

        .button-half-second {
            grid-column: 2;
            grid-row: 2;
            height: 100%;
        }

        .ripple {
            position: absolute;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            transform: scale(0);
            pointer-events: none;
            z-index: 1;
            transition: transform 0.5s ease-out, opacity 0.3s ease;
        }

        .content {
            position: relative;
            z-index: 3;
            display: none;
            padding: 25px;
            background-color: #F5BF77;
            height: calc(100% - 60px);
            overflow-y: auto;
            border-radius: 10px;
            margin-top: 20px;
            text-align: left;
            animation: fadeIn 0.5s ease;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .back {
            background-color: #fde8cf;
            border: none;
            padding: 8px 15px;
            border-radius: 8px;
            cursor: pointer;
            float: right;
            transition: background-color 0.3s;
            position: relative;
            z-index: 3;
            display: none;
            margin-top: 10px;
        }

        .back:hover {
            background-color: #f2c890;
        }

        input, .submit {
            width: 100%;
            box-sizing: border-box;
        }

        input[type="text"], input[type="number"] {
            padding: 10px;
            margin: 8px 0 5px 0;
            border-radius: 15px;
            border: none;
            background-color: #fff;
            box-shadow: inset 0 2px 5px rgba(0,0,0,0.1);
        }

        .submit {
            padding: 12px;
            border-radius: 10px;
            border: none;
            background-color: #fde8cf;
            font-weight: bold;
            cursor: pointer;
            margin-top: 15px;
            transition: background-color 0.3s;
        }

        .submit:hover {
            background-color: #f2c890;
        }

        .error {
            color: #d32f2f;
            font-size: 14px;
            margin-top: 0;
            margin-bottom: 10px;
            display: none;
        }

        .input-error {
            border: 2px solid #d32f2f !important;
        }

        .form-group {
            margin-bottom: 10px;
        }

        .hours-label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }

        .hours-container {
            margin-bottom: 15px;
            border: 1px solid #e89227;
            padding: 10px;
            border-radius: 10px;
            background-color: rgba(255, 255, 255, 0.2);
        }

        .hours-container h3 {
            margin-top: 0;
            font-size: 16px;
            color: #5a3a15;
        }

        /* Estilos para la tabla de consulta */
        .action-buttons {
            margin-bottom: 15px;
            display: flex;
            gap: 10px;
        }

        .action-button {
            padding: 10px 15px;
            border: none;
            border-radius: 5px;
            background-color: #f09a3c;
            color: #000;
            font-weight: bold;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .action-button:hover {
            background-color: #e89227;
        }

        .action-button:disabled {
            background-color: #cccccc;
            cursor: not-allowed;
        }

        .units-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 15px;
            background-color: #fff;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        .units-table th, .units-table td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        .units-table th {
            background-color: #f09a3c;
            color: #000;
            font-weight: bold;
        }

        .units-table tr:hover {
            background-color: #f5f5f5;
        }

        .units-table tr.selected {
            background-color: #ffe0b2;
        }

        .no-data {
            text-align: center;
            padding: 20px;
            color: #666;
        }

        /* Estilos para el modal de asignación de profesor */
        .modal-backdrop {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }

        .modal {
            background-color: #fff;
            border-radius: 10px;
            padding: 20px;
            width: 90%;
            max-width: 500px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
            z-index: 1001;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #eee;
            padding-bottom: 10px;
        }

        .modal-title {
            font-size: 18px;
            font-weight: bold;
            color: #333;
        }

        .close-button {
            background: none;
            border: none;
            font-size: 20px;
            cursor: pointer;
            color: #777;
        }

        .close-button:hover {
            color: #333;
        }

        .profesor-list {
            max-height: 300px;
            overflow-y: auto;
            margin-bottom: 20px;
        }

        .profesor-item {
            padding: 10px;
            border-bottom: 1px solid #eee;
            cursor: pointer;
            transition: background-color 0.2s;
        }

        .profesor-item:hover {
            background-color: #f5f5f5;
        }

        .profesor-item.selected {
            background-color: #ffe0b2;
        }

        .modal-actions {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
        }

        .modal-button {
            padding: 8px 16px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-weight: bold;
        }

        .modal-button.primary {
            background-color: #f09a3c;
            color: #000;
        }

        .modal-button.primary:hover {
            background-color: #e89227;
        }

        .modal-button.secondary {
            background-color: #e0e0e0;
            color: #333;
        }

        .modal-button.secondary:hover {
            background-color: #d0d0d0;
        }
    </style>
    <script type="text/javascript">
        //<![CDATA[
        // Datos de ejemplo (simulando una base de datos)
        var unidadesAprendizaje = [
            { id: 1, nombre: "Matemáticas Básicas", maestro: "Juan Pérez", horasClase: 3, horasTaller: 1, horasLaboratorio: 0 },
            { id: 2, nombre: "Programación I", maestro: "María García", horasClase: 2, horasTaller: 2, horasLaboratorio: 2 },
            { id: 3, nombre: "Física General", maestro: "", horasClase: 4, horasTaller: 0, horasLaboratorio: 2 },
            { id: 4, nombre: "Química Orgánica", maestro: "Carlos López", horasClase: 3, horasTaller: 0, horasLaboratorio: 3 },
            { id: 5, nombre: "Base de Datos", maestro: "Ana Martínez", horasClase: 2, horasTaller: 1, horasLaboratorio: 2 }
        ];

        // Simulación de profesores en la base de datos
        var profesores = [
            { id: 1, nombre: "Juan Pérez", rfc: "PERE800101" },
            { id: 2, nombre: "María García", rfc: "GARC750215" },
            { id: 3, nombre: "Carlos López", rfc: "LOPE851230" },
            { id: 4, nombre: "Ana Martínez", rfc: "MART780512" },
            { id: 5, nombre: "Roberto Sánchez", rfc: "SANC900625" },
            { id: 6, nombre: "Laura Hernández", rfc: "HERN820708" },
            { id: 7, nombre: "Miguel Torres", rfc: "TORR791124" }
        ];

        var selectedRowId = null;
        var selectedProfesorId = null;

        function createRipple(e, color) {
            const container = document.getElementById('container');
            const ripple = document.createElement('span');
            ripple.classList.add('ripple');
            ripple.style.backgroundColor = color;

            const rect = container.getBoundingClientRect();
            ripple.style.left = `${e.clientX - rect.left - 10}px`;
            ripple.style.top = `${e.clientY - rect.top - 10}px`;

            container.appendChild(ripple);

            const maxDim = Math.max(rect.width, rect.height);
            setTimeout(() => {
                ripple.style.transform = `scale(${maxDim / 10})`;
            }, 10);

            setTimeout(() => ripple.remove(), 600);
        }

        function mostrarFormulario(e) {
            createRipple(e, '#F5BF77');

            // Ocultar menú después de la animación
            setTimeout(() => {
                document.getElementById('menu').style.display = 'none';
                document.getElementById('formulario').style.display = 'block';
                document.getElementById('backButton').style.display = 'inline-block';
                document.getElementById('container').style.backgroundColor = '#F5BF77';
            }, 600);
        }

        function mostrarUnidadAprendizaje(e) {
            createRipple(e, '#F5BF77');

            // Ocultar menú después de la animación
            setTimeout(() => {
                document.getElementById('menu').style.display = 'none';
                document.getElementById('unidadAprendizaje').style.display = 'block';
                document.getElementById('backButton').style.display = 'inline-block';
                document.getElementById('container').style.backgroundColor = '#F5BF77';
            }, 600);
        }

        function mostrarConsulta(e) {
            createRipple(e, '#F5BF77');

            // Ocultar menú después de la animación
            setTimeout(() => {
                document.getElementById('menu').style.display = 'none';
                document.getElementById('consulta').style.display = 'block';
                document.getElementById('backButton').style.display = 'inline-block';
                document.getElementById('container').style.backgroundColor = '#F5BF77';
                // Cargar datos cuando se muestra la consulta
                cargarDatosTabla();
            }, 600);
        }

        function regresarMenu(e) {
            createRipple(e, '#fde8cf');

            // Ocultar contenido y mostrar menú después de la animación
            setTimeout(() => {
                document.getElementById('formulario').style.display = 'none';
                document.getElementById('unidadAprendizaje').style.display = 'none';
                document.getElementById('consulta').style.display = 'none';
                document.getElementById('backButton').style.display = 'none';
                document.getElementById('menu').style.display = 'grid';
                document.getElementById('container').style.backgroundColor = '#fde8cf';
                // Reiniciar selección al regresar
                selectedRowId = null;
            }, 600);
        }

        function validarCampo(inputId, errorId) {
            var input = document.getElementById(inputId);
            var errorMsg = document.getElementById(errorId);

            if (input.value.trim() === '') {
                input.classList.add('input-error');
                errorMsg.style.display = 'block';
                return false;
            } else {
                input.classList.remove('input-error');
                errorMsg.style.display = 'none';
                return true;
            }
        }

        function validarRFC(event) {
            // Validar campos obligatorios
            var camposValidos = true;
            camposValidos = validarCampo('nombre', 'error_nombre') && camposValidos;
            camposValidos = validarCampo('apellido1', 'error_apellido1') && camposValidos;
            camposValidos = validarCampo('apellido2', 'error_apellido2') && camposValidos;
            camposValidos = validarCampo('rfc', 'error_rfc') && camposValidos;

            if (!camposValidos) {
                event.preventDefault();
                alert("Por favor, complete todos los campos obligatorios.");
                return false;
            }

            var apellido1 = document.getElementById("apellido1").value.trim().toUpperCase();
            var apellido2 = document.getElementById("apellido2").value.trim().toUpperCase();
            var nombre    = document.getElementById("nombre").value.trim().toUpperCase();
            var rfc       = document.getElementById("rfc").value.trim().toUpperCase();

            // Validar longitud
            if (rfc.length !== 13) {
                event.preventDefault();
                alert("El RFC debe tener exactamente 13 caracteres.");
                return false;
            }

            // Construir prefijo esperado del RFC (4 letras)
            var esperado = apellido1.substring(0,2) + apellido2.charAt(0) + nombre.charAt(0);

            if (rfc.substring(0,4) !== esperado) {
                event.preventDefault();
                alert("Los primeros 4 caracteres del RFC no coinciden con los apellidos y nombre.");
                return false;
            }

            // Validar estructura general: 4 letras + 6 dígitos (fecha) + 3 alfanuméricos
            var regexRFC = /^[A-ZÑ&]{4}\d{6}[A-Z0-9]{3}$/;
            if (!regexRFC.test(rfc)) {
                event.preventDefault();
                alert("Formato de RFC inválido. Ejemplo válido: GARC850715XXX");
                return false;
            }

            return true;
        }

        function validarHoras(input) {
            // Obtener el valor del campo
            var valor = input.value;

            // Si está vacío, establecer como 0
            if (valor === '') {
                input.value = 0;
                return;
            }

            // Convertir a número
            var num = parseInt(valor, 10);

            // Si no es un número, establecer como 0
            if (isNaN(num)) {
                input.value = 0;
                return;
            }

            // Si es menor que 0, establecer como 0
            if (num < 0) {
                input.value = 0;
                return;
            }

            // Si es mayor que 4, establecer como 4
            if (num > 4) {
                input.value = 4;
                return;
            }

            // Si está entre 0 y 4, mantener el valor
            input.value = num;
        }

        function validarNombreAsignacion() {
            return validarCampo('nombre_asignacion', 'error_nombre_asignacion');
        }

        function validarTotalHoras() {
            var horasClase = parseInt(document.getElementById('horas_clase').value) || 0;
            var horasTaller = parseInt(document.getElementById('horas_taller').value) || 0;
            var horasLab = parseInt(document.getElementById('horas_laboratorio').value) || 0;

            var total = horasClase + horasTaller + horasLab;

            if (total === 0) {
                alert("Error: Debe haber al menos una hora en clase, taller o laboratorio.");
                return false;
            }

            return true;
        }

        function validarFormularioAsignacion(event) {
            // Validar nombre de asignación
            if (!validarNombreAsignacion()) {
                event.preventDefault();
                alert("Por favor, complete el nombre de la asignación.");
                return false;
            }

            // Validar horas (por si acaso)
            validarHoras(document.getElementById('horas_clase'));
            validarHoras(document.getElementById('horas_taller'));
            validarHoras(document.getElementById('horas_laboratorio'));

            // Validar que al menos haya una hora en total
            if (!validarTotalHoras()) {
                event.preventDefault();
                return false;
            }

            // Si todo está bien, permitir envío del formulario
            alert('Formulario validado correctamente. Los datos serían enviados en un sistema real.');
            return true;
        }

        // Funciones para la tabla de consulta
        function cargarDatosTabla() {
            var tabla = document.getElementById('tabla-unidades');
            var tbody = tabla.querySelector('tbody');

            // Limpiar tabla
            tbody.innerHTML = '';

            if (unidadesAprendizaje.length === 0) {
                var row = document.createElement('tr');
                row.innerHTML = '<td colspan="7" class="no-data">No hay unidades de aprendizaje registradas</td>';
                tbody.appendChild(row);
                return;
            }

            // Llenar tabla con datos
            unidadesAprendizaje.forEach(function(unidad) {
                var row = document.createElement('tr');
                row.setAttribute('data-id', unidad.id);
                row.innerHTML = '<td>' + unidad.id + '</td>' +
                    '<td>' + unidad.nombre + '</td>' +
                    '<td>' + (unidad.maestro || 'Sin asignar') + '</td>' +
                    '<td>' + unidad.horasClase + '</td>' +
                    '<td>' + unidad.horasTaller + '</td>' +
                    '<td>' + unidad.horasLaboratorio + '</td>';

                // Agregar evento de clic para seleccionar fila
                row.addEventListener('click', function() {
                    seleccionarFila(this);
                });

                tbody.appendChild(row);
            });

            // Actualizar estado de botones
            actualizarEstadoBotones();
        }

        function seleccionarFila(fila) {
            // Quitar selección anterior
            var filas = document.querySelectorAll('#tabla-unidades tbody tr');
            filas.forEach(function(f) {
                f.classList.remove('selected');
            });

            // Seleccionar nueva fila
            fila.classList.add('selected');
            selectedRowId = parseInt(fila.getAttribute('data-id'));

            // Actualizar estado de botones
            actualizarEstadoBotones();
        }

        function actualizarEstadoBotones() {
            var btnModificar = document.getElementById('btn-modificar');
            var btnAsignar = document.getElementById('btn-asignar');
            var btnEliminar = document.getElementById('btn-eliminar');

            if (selectedRowId !== null) {
                btnModificar.disabled = false;
                btnAsignar.disabled = false;
                btnEliminar.disabled = false;
            } else {
                btnModificar.disabled = true;
                btnAsignar.disabled = true;
                btnEliminar.disabled = true;
            }
        }

        function modificarUnidad() {
            if (selectedRowId === null) {
                alert('Por favor, seleccione una unidad para modificar.');
                return;
            }

            // Buscar la unidad seleccionada
            var unidad = unidadesAprendizaje.find(function(u) {
                return u.id === selectedRowId;
            });

            if (unidad) {
                alert('Modificando unidad: ' + unidad.nombre + '\nEn un sistema real, se abriría un formulario de edición.');
                // Aquí iría la lógica para abrir un formulario de modificación
            }
        }

        function asignarProfesor() {
            if (selectedRowId === null) {
                alert('Por favor, seleccione una unidad para asignar un profesor.');
                return;
            }

            // Buscar la unidad seleccionada
            var unidad = unidadesAprendizaje.find(function(u) {
                return u.id === selectedRowId;
            });

            if (unidad) {
                // Mostrar el modal de selección de profesor
                mostrarModalProfesores(unidad);
            }
        }

        function mostrarModalProfesores(unidad) {
            // Configurar el título del modal
            document.getElementById('modal-title').textContent = 'Asignar profesor a: ' + unidad.nombre;

            // Cargar la lista de profesores
            var profesorList = document.getElementById('profesor-list');
            profesorList.innerHTML = '';

            profesores.forEach(function(profesor) {
                var item = document.createElement('div');
                item.className = 'profesor-item';
                item.setAttribute('data-id', profesor.id);

                // Marcar como seleccionado si es el profesor actual
                if (unidad.maestro === profesor.nombre) {
                    item.classList.add('selected');
                    selectedProfesorId = profesor.id;
                }

                item.innerHTML = '<strong>' + profesor.nombre + '</strong> - ' + profesor.rfc;

                item.addEventListener('click', function() {
                    // Deseleccionar cualquier otro profesor
                    var items = document.querySelectorAll('.profesor-item');
                    items.forEach(function(i) {
                        i.classList.remove('selected');
                    });

                    // Seleccionar este profesor
                    this.classList.add('selected');
                    selectedProfesorId = profesor.id;
                });

                profesorList.appendChild(item);
            });

            // Mostrar el modal
            document.getElementById('modal-backdrop').style.display = 'flex';
        }

        function cerrarModal() {
            document.getElementById('modal-backdrop').style.display = 'none';
            selectedProfesorId = null;
        }

        function confirmarAsignacion() {
            if (selectedProfesorId === null) {
                alert('Por favor, seleccione un profesor de la lista.');
                return;
            }

            // Buscar el profesor seleccionado
            var profesor = profesores.find(function(p) {
                return p.id === selectedProfesorId;
            });

            // Buscar la unidad seleccionada
            var unidad = unidadesAprendizaje.find(function(u) {
                return u.id === selectedRowId;
            });

            if (profesor && unidad) {
                // En un sistema real, esto actualizaría la base de datos
                unidad.maestro = profesor.nombre;

                // Actualizar la tabla
                cargarDatosTabla();

                // Cerrar el modal
                cerrarModal();

                alert('Profesor ' + profesor.nombre + ' asignado correctamente a ' + unidad.nombre);
            }
        }

        function eliminarUnidad() {
            if (selectedRowId === null) {
                alert('Por favor, seleccione una unidad para eliminar.');
                return;
            }

            // Buscar la unidad seleccionada
            var unidad = unidadesAprendizaje.find(function(u) {
                return u.id === selectedRowId;
            });

            if (unidad && confirm('¿Está seguro de que desea eliminar la unidad: ' + unidad.nombre + '?')) {
                // En un sistema real, esto eliminaría el registro de la base de datos
                unidadesAprendizaje = unidadesAprendizaje.filter(function(u) {
                    return u.id !== selectedRowId;
                });

                // Reiniciar selección
                selectedRowId = null;

                // Actualizar la tabla
                cargarDatosTabla();

                alert('Unidad eliminada correctamente.');
            }
        }
        //]]>
    </script>
</head>
<body>
<div class="header">SAUAP</div>

<div class="main-container">
    <div class="container" id="container">
        <div class="menu-grid" id="menu">
            <button type="button" class="menu-button button-large" onclick="mostrarFormulario(event)">
                Altas<br />profesor
            </button>
            <button type="button" class="menu-button button-half" onclick="mostrarUnidadAprendizaje(event)">
                Altas<br />unidad de aprendizaje
            </button>
            <button type="button" class="menu-button button-half-second" onclick="mostrarConsulta(event)">
                Consulta<br />unidad de aprendizaje
            </button>
        </div>

        <button class="back" id="backButton" onclick="regresarMenu(event)">Regresar</button>

        <div class="content" id="formulario">
            <h2>Altas profesor</h2>
            <form action="#" method="post" onsubmit="return validarRFC(event)">
                <p><strong>ID automático :</strong> 0000</p>

                <div class="form-group">
                    <label for="nombre">Nombre:</label>
                    <input type="text" id="nombre" name="nombre" onblur="validarCampo('nombre', 'error_nombre')" />
                    <div id="error_nombre" class="error">El nombre no puede estar vacío</div>
                </div>

                <div class="form-group">
                    <label for="apellido1">Primer Apellido:</label>
                    <input type="text" id="apellido1" name="apellido1" onblur="validarCampo('apellido1', 'error_apellido1')" />
                    <div id="error_apellido1" class="error">El primer apellido no puede estar vacío</div>
                </div>

                <div class="form-group">
                    <label for="apellido2">Segundo Apellido:</label>
                    <input type="text" id="apellido2" name="apellido2" onblur="validarCampo('apellido2', 'error_apellido2')" />
                    <div id="error_apellido2" class="error">El segundo apellido no puede estar vacío</div>
                </div>

                <div class="form-group">
                    <label for="rfc">RFC:</label>
                    <input type="text" id="rfc" name="rfc" onblur="validarCampo('rfc', 'error_rfc')" />
                    <div id="error_rfc" class="error">El RFC no puede estar vacío</div>
                </div>

                <input type="submit" value="Subir" class="submit" />
            </form>
        </div>

        <div class="content" id="unidadAprendizaje">
            <h2>Altas unidad de aprendizaje</h2>
            <p>Formulario para altas de unidades de aprendizaje</p>
            <form action="#" method="post" onsubmit="return validarFormularioAsignacion(event)">
                <p><strong>ID automático :</strong> 0000</p>

                <div class="form-group">
                    <label for="nombre_asignacion">Nombre de la unidad de aprendizaje:</label>
                    <input type="text" id="nombre_asignacion" name="nombre_asignacion" onblur="validarNombreAsignacion()" />
                    <div id="error_nombre_asignacion" class="error">El nombre de la asignación no puede estar vacío</div>
                </div>

                <div class="form-group">
                    <span class="hours-label">No. Horas clase:</span>
                    <input type="number" id="horas_clase" name="horas_clase" min="0" max="4"
                           onchange="validarHoras(this)" onblur="validarHoras(this)" />
                </div>

                <div class="form-group">
                    <span class="hours-label">No. Horas taller:</span>
                    <input type="number" id="horas_taller" name="horas_taller" min="0" max="4"
                           onchange="validarHoras(this)" onblur="validarHoras(this)" />
                </div>

                <div class="form-group">
                    <span class="hours-label">No. Horas Laboratorio:</span>
                    <input type="number" id="horas_laboratorio" name="horas_laboratorio" min="0" max="4"
                           onchange="validarHoras(this)" onblur="validarHoras(this)" />
                </div>

                <input type="submit" value="Subir" class="submit" />
            </form>
        </div>

        <div class="content" id="consulta">
            <h2>Consulta unidad de aprendizaje</h2>

            <div class="action-buttons">
                <button id="btn-modificar" class="action-button" onclick="modificarUnidad()" disabled>Modificar</button>
                <button id="btn-asignar" class="action-button" onclick="asignarProfesor()" disabled>Asignar Profesor</button>
                <button id="btn-eliminar" class="action-button" onclick="eliminarUnidad()" disabled>Eliminar</button>
            </div>

            <table id="tabla-unidades" class="units-table">
                <thead>
                <tr>
                    <th>ID</th>
                    <th>Nombre</th>
                    <th>Maestro</th>
                    <th>Horas Clase</th>
                    <th>Horas Taller</th>
                    <th>Horas Laboratorio</th>
                </tr>
                </thead>
                <tbody>
                <!-- Los datos se cargarán dinámicamente con JavaScript -->
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Modal para asignar profesor -->
<div class="modal-backdrop" id="modal-backdrop">
    <div class="modal">
        <div class="modal-header">
            <div class="modal-title" id="modal-title">Asignar profesor</div>
            <button class="close-button" onclick="cerrarModal()">×</button>
        </div>
        <div class="profesor-list" id="profesor-list">
            <!-- Lista de profesores se cargará dinámicamente -->
        </div>
        <div class="modal-actions">
            <button class="modal-button secondary" onclick="cerrarModal()">Cancelar</button>
            <button class="modal-button primary" onclick="confirmarAsignacion()">Asignar</button>
        </div>
    </div>
</div>
</body>
</html>